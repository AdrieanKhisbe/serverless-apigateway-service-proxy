service: basic-serverless

plugins:
  - serverless-apigateway-service-proxy

provider:
  name: aws
  stage: ${env:NODE_ENV, 'development'}
  runtime: nodejs8.10
  region: eu-west-1
  environment:
    NODE_ENV: ${self:provider.stage}

custom:
  apiGatewayServiceProxies:
    - kinesis:
        path: /proxies/kinesis
        method: post
        streamName: { Ref: 'SomeStream' }
        cors: true
    - sqs:
        path: /proxies/sqs
        method: post
        queueName: {"Fn::GetAtt":[ "SomeSQSQueue", "QueueName" ]}
        cors: true
    - s3:
        path: /proxies/s3
        method: get
        bucket: {Ref: 'SomeBucket'}
        cors: true

functions:
  simple-handler:
    handler: index.handler
    name: basic-serverless--simple-handler-${self:provider.stage}
    description: Simple Http handler
    memorySize: 128
    timeout: 10
    events:
      - http:
          path: /hello
          method: GET
          cors: true

resources:
  Description: Cloudformation for Basic Serverless Api
  Resources:
    SomeStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: basic-serverless-example-kinesis
        ShardCount: 1
    SomeSQSQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: basic-serverless-example-sqs
    SomeBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: basic-serverless-example-s3
